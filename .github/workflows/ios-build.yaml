name: Build

on:
  workflow_call:
    inputs:
      cache-key:
        required: true
        type: string

env:
  CACHE-KEY: ${{ inputs.cache-key }}
  REPO-OWNER: ${{ github.repository_owner }}

jobs:
  check-build-cache:
    name: Check build cache
    runs-on: macos-12
    outputs:
      cache-found: ${{ steps.set-cache-found.outputs.cache-found }}
    steps:     
      - name: Set envs for zingolib CI
        if: ${{ contains(github.repository, 'zingolib') }}
        run: echo "REPO-OWNER=zingolabs" >> $GITHUB_ENV
            
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO-OWNER }}/zingo-mobile
        
      - name: Check if native rust cache exists
        id: check-build-cache
        uses: actions/cache@v4
        with:
          path: ios/libuniffi_zingo.a
          key: native-ios-uniffi-universal-${{ env.CACHE-KEY }}
          lookup-only: true
  
      - name: Set cache-found
        id: set-cache-found
        run: echo "cache-found=${{ steps.check-build-cache.outputs.cache-hit }}" >> $GITHUB_OUTPUT
  
  build:
    name: Build native rust
    needs: check-build-cache
    if: ${{ needs.check-build-cache.outputs.cache-found != 'true' }}
    runs-on: macos-12
    env:
      RUSTUP_HOME: /root/.rustup
    steps:
      - name: Set envs for zingolib CI
        if: ${{ contains(github.repository, 'zingolib') }}
        run: echo "REPO-OWNER=zingolabs" >> $GITHUB_ENV
            
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO-OWNER }}/zingo-mobile
        
      - name: Cargo update for zingolib CI
        if: ${{ contains(github.repository, 'zingolib') }}
        run: |
          echo "zingolib_ref=$(echo ${GITHUB_REF} | sed 's/\//\\\//g')" >> $GITHUB_ENV
          sudo sed -i "/^zingolib\|^zingoconfig/ s/branch = \"dev\"/rev = \"${{ env.zingolib_ref }}\"/" "rust/lib/Cargo.toml"
          if cat rust/lib/Cargo.toml | grep "^zingolib\|^zingoconfig" | grep -q "branch"; then exit 1; fi
          cd rust
          sudo cargo update -p zingolib -p zingoconfig --aggressive
          sudo rustup default nightly

      - name: Install Cargo Lipo
        run: |
          sudo cargo install cargo-lipo
      
      - name: Build Universal rust lib & uniffi lib and copy to ios folder
        working-directory: ./rust/ios
        run: |
          sudo ./buildsimulator.sh
      
      - name: Upload native rust
        uses: actions/upload-artifact@v4
        with:
          name: native-ios-uniffi-universal-${{ env.CACHE-KEY }}
          path: ios/libuniffi_zingo.a
      
  cache-native-librust:
    name: Cache native rust
    needs: build
    runs-on: macos-12
    steps:
      - name: Set envs for zingolib CI
        if: ${{ contains(github.repository, 'zingolib') }}
        run: echo "REPO-OWNER=zingolabs" >> $GITHUB_ENV
            
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO-OWNER }}/zingo-mobile
            
      - name: Download native rust
        uses: actions/download-artifact@v4
        with: 
          name: native-ios-uniffi-universal-${{ env.CACHE-KEY }}
          path: ios
      
      - name: Cache native rust
        uses: actions/cache@v4
        with:
          path: ios
          key: native-ios-uniffi-universal-${{ env.CACHE-KEY }}

